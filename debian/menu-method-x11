#!/usr/bin/install-menu
#
# pdmenu menu-method for menus that include X programs

# The verson of the menu package that can process this.
compat="menu-1"

# Include the local preferences, pdmenu only uses the defintion of title().
!include menu.h

# Filename of the pdmenurc file we will generate.
genmenu="pdmenurc.x11.new"

# Where the system wide generated file is placed.
rootprefix="/var/lib/pdmenu/"
userprefix="."
onlyrunasroot=true

# Title of the top level menu that is made.
mainmenutitle="Debian Menus"

# Don't ever use "q" as a hotkey in menus, becuase it is used to popdown
# submenus. Also, don't use "+", "2", "-" or "8" becuase they are used to
# navigate the menus.
hotkeyexclude="q+-28"

# Some text to go at the top of the autogenerated file.
preoutput="# Automatically generated pdmenurc file.\n# Do not edit (see /usr/share/doc/pdmenu/README.debian)\n\n"

# In what order we output the menus.
treewalk="c(m)"

# How to start a new menu in the rc file.
startmenu="menu:" esc($section,":") ":" esc(title(),":") "\n"

# How to add a submenu to a menu.
submenutitle="	show:" esc(escfirst(title(),$hotkey,"_"),":") "..::" esc($section,":") "\n"

# The supported display types, in order of preference.
supported
x11=	"	exec:" esc(escfirst(title(),$hotkey,"_"),":") ":noclear:" $command " >/dev/null 2>&1 &\n"
text=	"	exec:" esc(escfirst(title(),$hotkey,"_"),":") "::" $command "\n"
endsupported

# Pdmenu doesn't need anything special at the end of a menu.
endmenu= "\n"

# Command to run at end. This overwrites the old menu file with the new one
# we just made.
postrun="mv -f " prefix() "pdmenurc.x11.new " prefix() "pdmenurc.x11 2>/dev/null"
